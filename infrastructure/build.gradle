buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.18.0'
        classpath 'org.flywaydb:flyway-core:10.18.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.flywaydb.flyway' version '10.18.0'
}


group = 'com.fullcycle.admin.catalogo.infrastructure'

mainClassName = 'com.fullcycle.admin.catalogo.infrastructure.Main'
//jar {
//    archiveFileName = 'application.jar'
//    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
//    manifest {
//        attributes("Main-Class": mainClassName)
//    }
//}

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'io.vavr:vavr:0.10.4'
    implementation('mysql:mysql-connector-java')

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.14')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.14')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testImplementation('org.flywaydb:flyway-core')
    testImplementation('org.flywaydb:flyway-mysql')

    testImplementation('org.testcontainers:testcontainers:1.20.1')
    testImplementation 'org.testcontainers:mysql:1.20.1'
    testImplementation('org.testcontainers:junit-jupiter:1.20.1')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

test {
    useJUnitPlatform()
}